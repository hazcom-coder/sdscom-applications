@page
@model SDSCom.Pages.ProductListModel

@{
    ViewData["Title"] = "Products";
}

@Html.Partial("./HeaderPartial")

<form>
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchStringName" value="@Model.CurrentFilterName" />
            Find by Id:
            <input type="text" name="SearchStringId" value="@Model.CurrentFilterId" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-page="ProductList">Back to full List</a> |
            <a asp-page="CreateEntity" asp-route-id="0" asp-route-type="1">Create New</a>
        </p>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="ProductList" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilterName="@Model.CurrentFilterName">
                        @Html.DisplayNameFor(model => model.Entity[0].EntityName)

                    </a>
                </th>
                <th>
                    <a asp-page="ProductList" asp-route-sortOrder="@Model.IdSort"
                       asp-route-currentFilterId="@Model.CurrentFilterId">
                        @Html.DisplayNameFor(model => model.Entity[0].OtherId)

                    </a>
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Entity)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EntityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OtherId)
                </td>
                <td>
                    <a asp-page="CreateEntity" asp-route-id="@item.Id">Edit</a>
                </td>
                <td>
                    <a asp-page="Chapters/ChapterIndex" asp-route-id="@item.Id">Author</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.Entity.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Entity.HasNextPage ? "disabled" : "";
    }

    <a asp-page="ProductList"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Entity.PageIndex - 1)"
       asp-route-currentFilterName="@Model.CurrentFilterName"
       asp-route-currentFilterId="@Model.CurrentFilterId"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-page="ProductList"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Entity.PageIndex + 1)"
       asp-route-currentFilterName="@Model.CurrentFilterName"
       asp-route-currentFilterId="@Model.CurrentFilterId"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</form>